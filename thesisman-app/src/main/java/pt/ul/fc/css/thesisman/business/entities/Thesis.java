package pt.ul.fc.css.thesisman.business.entities;

import jakarta.persistence.*;
import org.springframework.lang.NonNull;

import java.util.ArrayList;
import java.util.List;

/**
 * @author 58180 Rodrigo Correia
 * @author 58188 Laura Cunha
 * @author 58640 Guilherme Wind
 *     <p>This class is used to represent a Thesis.
 */
@Entity
public class Thesis {

  @Id
  @GeneratedValue(strategy = GenerationType.AUTO)
  private Long id;

  private Float finalGrade;

  @NonNull @OneToOne private Theme theme;

  @NonNull
  @OneToMany(orphanRemoval = true)
  @JoinColumn
  private List<Submission> submissions = new ArrayList<>();

  @NonNull @OneToOne private Student student;

  /**
   * Protected constructor required by JPA, initializes all {@code @NonNull} annotated attributes
   * with default values
   */
  protected Thesis() {
    this.student = new Student();
    this.theme = new Dissertation();
  }

  /**
   * Creates a new instance of a Thesis with the specified {@code student}, and {@code theme}.
   *
   * @param student The student of this thesis.
   * @param theme The theme of this theme.
   */
  public Thesis(@NonNull Student student, @NonNull Theme theme) {
    this.student = student;
    this.theme = theme;
  }

  /**
   * Returns the id of this defence.
   *
   * @return The id generated by the database for this defence.
   */
  public Long getId() {
    return id;
  }

  /**
   * Returns the final grade given of this thesis.
   *
   * @return The final grade of this thesis.
   */
  public Float getFinalGrade() {
    return this.finalGrade;
  }

  /**
   * Sets the final grade for this theis.
   *
   * @param finalGrade The final grade given to the thesis by the advisor.
   */
  public void setFinalGrade(Float finalGrade) {
    this.finalGrade = finalGrade;
  }

  /**
   * Returns the theme of this thesis.
   *
   * @return The theme this thesis is for.
   */
  public @NonNull Theme getTheme() {
    return theme;
  }

  /**
   * Returns all the submissions of this thesis.
   *
   * @return The submissions of this thesis.
   */
  public @NonNull List<Submission> getSubmissions() {
    return submissions;
  }

  /**
   * Adds to the given submission a thesis.
   *
   * @param submission The submission to be added.
   */
  public void addSubmission(@NonNull Submission submission) {
    this.submissions.add(submission);
  }

  /**
   * Returns the student that made this thesis.
   *
   * @return The student that made this thesis.
   */
  public @NonNull Student getStudent() {
    return student;
  }

  @Override
  public String toString() {
    return "Thesis["
        + "id="
        + id
        + ", finalGrade="
        + finalGrade
        + ", theme="
        + theme
        + ", student="
        + student
        + "]";
  }
}
